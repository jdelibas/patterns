{"mappings":"kBAAe,SAAAA,EAA2BC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAC/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAAKC,EAAKD,GAAKH,EAAIG,GACnE,OAAOC,ECEM,SAAAE,EAAwBN,EAAKG,GAC1C,OCNa,SAAyBH,GACtC,GAAIK,MAAME,QAAQP,GAAM,OAAOA,EDKxBQ,CAAeR,IENT,SAA0BS,GACvC,GAAsB,oBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOJ,MAAMO,KAAKH,GFKtFI,CAAqBb,IGJtC,SAAqCc,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOf,EAAkBe,EAAGC,GACvD,IAAIC,EAAIC,OAAOC,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAG,GAEnD,MADU,WAANL,GAAkBF,EAAEQ,cAAaN,EAAIF,EAAEQ,YAAYC,MAC7C,QAANP,GAAqB,QAANA,EAAoBX,MAAMO,KAAKI,GACxC,cAANA,GAAqB,2CAA2CQ,KAAKR,GAChEjB,EAAkBe,EAAGC,QAD9B,GHF8DU,CAA2BzB,EAAKG,IINjF,WACb,MAAM,IAAIuB,UAAU,8IJKgFC,GKKtGC,EAAiB,CACfC,YAZkB,SAAAC,OAAGC,EAAMD,EAANC,OAAQC,EAAKF,EAALE,aAAY,SAACC,GAC1C,IAAmBC,EAAK5B,EAAL0B,EAAK,GAAjBG,EAAYD,EAAK,GAAZE,EAAOF,EAAK,GACOG,EAAM/B,EAANyB,EAAM,GAA9BO,EAAwBD,EAAM,GAI/BE,EAASD,GAJgBD,EAAM,GACNC,IACbF,EAAMD,IAEYF,EAAQE,GAC5C,OAAII,GAAU,EAAUD,EACjBC,WCRHX,EAAAC,YAEAW,EAASC,SAASC,eAAe,UACjCC,EAAMH,EAAOI,WAAW,MAExBC,EAAI,EAAIC,KAAKC,GAAK,EAClBC,EAAI,GAENC,EAAO,GAGXC,OAAOC,iBAAiB,SAAUC,GAClC,IAGIC,EAAwBC,EAAKC,EAAMC,EADnCC,EAAa,EAUjB,SAASC,EAAQC,GAMfC,sBAAsBF,IAGtBF,GADAF,EAAMK,GACUJ,GAEFF,IAGVE,EAAOD,EAAOE,EAAUH,EAc9B,SAAqBQ,GACnB,IAAKZ,EAAK/C,OACR,OAEF4D,QAAQC,IAAIF,GAGZG,EAASf,EAAMY,GAlBXI,GADAR,GAEIA,GA9BE,KA+BJA,EAAa,IAmBrB,SAASL,IACP,IAAMc,EAAShB,OAAOiB,YAChBC,EAAQlB,OAAOmB,WACrB7B,EAAO4B,MAAQA,EACf5B,EAAO0B,OAASA,EAChBJ,QAAQC,IAAIK,EAAOF,GACnBjB,EAUF,SAAuBmB,EAAOF,GAE5B,IADA,IAAMI,EAAO,GACJC,EAAIvB,EAAGuB,EAAIvB,EAAIF,KAAK0B,IAAI3B,GAAKqB,EAAQK,GAAKvB,EAAIF,KAAK0B,IAAI3B,GAAI,CAElE,IADA,IAAM4B,EAAM,GACHC,EAAI1B,EAAG2B,EAAI,EAAGD,EAAI1B,GAAK,EAAIF,KAAK8B,IAAI/B,IAAMuB,EAAOM,GAAK1B,GAAK,EAAIF,KAAK8B,IAAI/B,IAAK0B,GAAKzB,KAAA+B,KAAC,EAAOF,KAAM3B,EAAIF,KAAK0B,IAAI3B,GACpH4B,EAAIK,KAAK,CACPC,OAAQ,CAAEL,EAAAA,EAAGH,EAAAA,GACbS,OAAQC,EAAaP,EAAGH,GACxBW,KAAMC,MAGVb,EAAKQ,KAAKL,GAEZ,OAAOH,EAvBAc,CAAchB,EAAOF,GAC5BF,EAASf,GAGX,IACcd,EAAKC,EACb+C,GADQhD,EACM,EADDC,EA7DP,GA6De,kBAgE3B,SAA+BD,EAAKC,GAClC,OAAOU,KAAKuC,MAAMvC,KAAKwC,UAAYlD,EAAMD,EAAM,GAAKA,GAjErBoD,CAAsBpD,EAAKC,KAGtDoD,EAAaC,EAAY,CAAE1D,OAAQ,CAAC,EAJxB,IAIuCC,MAAO,CAAC,EAAG,OAkBpE,SAASiD,EAAaP,EAAGH,GAGvB,IAFA,IAAMS,EAAS,GAEN7E,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMuF,EAAQ,CACZhB,EAAGA,EAAI1B,EAAIF,KAAK8B,IAAI/B,EAAI1C,GACxBoE,EAAGA,EAAIvB,EAAIF,KAAK0B,IAAI3B,EAAI1C,IAE1B6E,EAAOF,KAAKY,GAEd,OAAOV,EAGT,SAAShB,EAASM,OAAMT,EAAA8B,UAAAzF,OAAA,QAAA,IAAAyF,UAAA,GAASA,UAAA,GAAD,EAC9BhD,EAAIiD,UAAU,EAAG,EAAGpD,EAAO4B,MAAO5B,EAAO0B,YAEnC2B,GAAS,EAATC,GAAS,EAATC,OAASC,EADXC,GAAY,EAAZC,GAAY,EAAZC,OAAYH,MAAhB,IAAA,IAAII,EAAAC,EAAgB/B,EAAI5D,OAAAC,cAApBsF,GAAAG,EAAAC,EAAYC,QAAAC,MAAZN,GAAY,EAAA,CAAZ,IAAMO,EAANJ,EAAYnE,UACd,IAAA,IAAIwE,EAAAC,EAAaF,EAAM9F,OAAAC,cAAnBkF,GAAAY,EAAAC,EAASJ,QAAAC,MAATV,GAAS,EAAY,CAArB,IAAMc,EAANF,EAASxE,MACX2E,EAAQD,GACRE,EACEF,EAAI5B,OAAOL,EACXiC,EAAI5B,OAAOR,EACXiB,EAAWmB,EAAIzB,KAAOrB,cALtBiC,GAAS,EAATC,EAASe,cAATjB,GAAS,MAATa,EAASK,QAATL,EAASK,oBAATjB,QAAAC,cADFG,GAAY,EAAZC,EAAYW,cAAZb,GAAY,MAAZI,EAAYU,QAAZV,EAAYU,oBAAZb,QAAAC,IAYN,SAASS,EAAQD,GACfhE,EAAIqE,YACJrE,EAAIsE,OAAON,EAAI3B,OAAO,GAAGN,EAAGiC,EAAI3B,OAAO,GAAGT,GAC1C,IAAK,IAAIpE,EAAI,EAAGA,EAAIwG,EAAI3B,OAAO9E,OAAQC,IACrCwC,EAAIuE,OAAOP,EAAI3B,OAAO7E,GAAGuE,EAAGiC,EAAI3B,OAAO7E,GAAGoE,GAE5C5B,EAAIwE,YACJxE,EAAIyE,SAGN,SAASP,EAAWnC,EAAGH,EAAG8C,GACxB1E,EAAIqE,YACJrE,EAAI2E,IAAI5C,EAAGH,EAAG8C,EAAK,EAAG,EAAIvE,KAAKC,IAC/BJ,EAAIyE,SAQNhE,IA3HEC,EAAc,IAPJ,GAQVE,EAAOL,OAAOqE,YAAYC,MAE1B9D","sources":["node_modules/@swc/helpers/src/_array_like_to_array.js","node_modules/@swc/helpers/src/_sliced_to_array.js","node_modules/@swc/helpers/src/_array_with_holes.js","node_modules/@swc/helpers/src/_iterable_to_array.js","node_modules/@swc/helpers/src/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/src/_non_iterable_rest.js","src/scale.js","src/main.js"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n","import arrayWithHoles from './_array_with_holes';\nimport iterableToArrayLimit from './_iterable_to_array';\nimport nonIterableRest from './_non_iterable_rest';\nimport unsupportedIterableToArray from './_unsupported_iterable_to_array';\n\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","import _arrayLikeToArray from './_array_like_to_array';\n\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return _arrayLikeToArray(o, minLen);\n}\n","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","const scaleLinear = ({ domain, range }) => (value) =>  {\n  const [min, max] = range\n  const [minDomain, maxDomain] = domain\n  const domainDiff = maxDomain - minDomain\n  const rangeDiff = max - min\n  const scale = domainDiff / rangeDiff\n  const newVal = minDomain + scale * (value - min)\n  if (newVal <= 0) return minDomain\n  return newVal\n}\n\nmodule.exports = {\n  scaleLinear,\n}\n","const { scaleLinear } = require('./scale')\n\nconst canvas = document.getElementById('canvas');\nconst ctx = canvas.getContext('2d');\n\nconst a = 2 * Math.PI / 6;\nconst r = 50;\n\nlet grid = []\nlet frameGrid = []\n\nwindow.addEventListener('resize', init);\nconst fps = 60;\nlet stop = false;\nlet frameCount = 0;\nlet fpsInterval, startTime, now, then, elapsed;\n\n\nfunction startAnimating(fps) {\n  fpsInterval = 1000 / fps;\n  then = window.performance.now();\n  startTime = then;\n  animate();\n}\nfunction animate(newtime) {\n  // stop\n  if (stop) {\n      return;\n  }\n  // request another frame\n  requestAnimationFrame(animate);\n  // calc elapsed time since last loop\n  now = newtime;\n  elapsed = now - then;\n  // if enough time has elapsed, draw the next frame\n  if (elapsed > fpsInterval) {\n      // Get ready for next frame by setting then=now, but...\n      // Also, adjust for fpsInterval not being multiple of 16.67\n      then = now - (elapsed % fpsInterval);\n      // draw stuff here\n      frameCount++;\n      animateGrid(frameCount)\n      if (frameCount >= fps) {\n        frameCount = 0;\n      }\n  }\n}\n\n\n\n\nconst offset = 1\nfunction animateGrid(frame) {\n  if (!grid.length) {\n    return\n  }\n  console.log(frame)\n\n  // frameGrid = []\n  drawGrid(grid, frame)\n}\n\nfunction init() {\n  const height = window.innerHeight\n  const width = window.innerWidth\n  canvas.width = width;\n  canvas.height = height;\n  console.log(width, height);\n  grid = getGridPoints(width, height);\n  drawGrid(grid)\n}\n\nconst maxRadius = 50\nconst seed = (min, max) => () => randomIntFromInterval(min, max)\nconst seeder = seed(1, fps)\n\nconst radiusStep = scaleLinear({ domain: [1, maxRadius], range: [1, 50 + fps] })\n\nfunction getGridPoints(width, height) {\n  const grid = []\n  for (let y = r; y + r * Math.sin(a) < height; y += r * Math.sin(a)) {\n    const row = []\n    for (let x = r, j = 0; x + r * (1 + Math.cos(a)) < width; x += r * (1 + Math.cos(a)), y += (-1) ** j++ * r * Math.sin(a)) {\n      row.push({\n        center: { x, y },\n        points: getHexPoints(x, y),\n        seed: seeder()\n      })\n    }\n    grid.push(row)\n  }\n  return grid;\n}\n\nfunction getHexPoints(x, y) {\n  const points = [];\n  // ctx.beginPath();\n  for (let i = 0; i < 6; i++) {\n    const point = {\n      x: x + r * Math.cos(a * i),\n      y: y + r * Math.sin(a * i)\n    }\n    points.push(point);\n  }\n  return points\n}\n\nfunction drawGrid(grid, frame = 0) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  for(const column of grid) {\n    for(const hex of column) {\n      drawHex(hex)\n      drawCircle(\n        hex.center.x,\n        hex.center.y,\n        radiusStep(hex.seed + frame)\n      )\n    }\n  }\n}\n\nfunction drawHex(hex) {\n  ctx.beginPath();\n  ctx.moveTo(hex.points[0].x, hex.points[0].y);\n  for (let i = 1; i < hex.points.length; i++) {\n    ctx.lineTo(hex.points[i].x, hex.points[i].y);\n  }\n  ctx.closePath();\n  ctx.stroke();\n}\n\nfunction drawCircle(x, y, rad) {\n  ctx.beginPath();\n  ctx.arc(x, y, rad, 0, 2 * Math.PI);\n  ctx.stroke();\n}\n\nfunction randomIntFromInterval(min, max) { // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\n\ninit();\nstartAnimating(fps)\n"],"names":["$a735c72dc00321c4$export$2e2bcd8739ae039","arr","len","length","i","arr2","Array","$d8de0eb6e0dd5f0d$export$2e2bcd8739ae039","isArray","$6e00726c30bb8aa8$export$2e2bcd8739ae039","iter","Symbol","iterator","from","$8664303016091545$export$2e2bcd8739ae039","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","$09f7b49357d6407d$export$2e2bcd8739ae039","TypeError","$9e1e3aff84b72d71$export$2e2bcd8739ae039","$59ad2844b7413105$exports","scaleLinear","param","domain","range","value","_range","min","max","_domain","minDomain","newVal","$5fbffa87c50562b9$var$canvas","document","getElementById","$5fbffa87c50562b9$var$ctx","getContext","$5fbffa87c50562b9$var$a","Math","PI","$5fbffa87c50562b9$var$r","$5fbffa87c50562b9$var$grid","window","addEventListener","$5fbffa87c50562b9$var$init","$5fbffa87c50562b9$var$fpsInterval","$5fbffa87c50562b9$var$now","$5fbffa87c50562b9$var$then","$5fbffa87c50562b9$var$elapsed","$5fbffa87c50562b9$var$frameCount","$5fbffa87c50562b9$var$animate","newtime","requestAnimationFrame","frame","console","log","$5fbffa87c50562b9$var$drawGrid","$5fbffa87c50562b9$var$animateGrid","height","innerHeight","width","innerWidth","grid","y","sin","row","x","j","cos","pow","push","center","points","$5fbffa87c50562b9$var$getHexPoints","seed","$5fbffa87c50562b9$var$seeder","$5fbffa87c50562b9$var$getGridPoints","floor","random","$5fbffa87c50562b9$var$randomIntFromInterval","$5fbffa87c50562b9$var$radiusStep","$5fbffa87c50562b9$require$scaleLinear","point","arguments","clearRect","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step","_iterator","next","done","column","_step1","_iterator1","hex","$5fbffa87c50562b9$var$drawHex","$5fbffa87c50562b9$var$drawCircle","err","return","beginPath","moveTo","lineTo","closePath","stroke","rad","arc","performance","now"],"version":3,"file":"index.273cf240.js.map"}